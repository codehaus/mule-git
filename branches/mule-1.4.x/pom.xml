<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <!-- Version -->
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.mule</groupId>
    <artifactId>mule</artifactId>
    <packaging>pom</packaging>
    <version>1.4.5-SNAPSHOT</version>

    <!-- Organization -->
    <organization>
        <name>MuleSource, Inc.</name>
        <url>http://www.mulesource.com</url>
    </organization>

    <!-- Project -->
    <name>Mule</name>

    <description>Mule is a simple yet robust and highly scalable Integration and ESB services framework. It is designed
        as a light-weight, event-driven component technology that handles communication with disparate systems
        transparently providing a simple component interface.
    </description>
    <url>http://mule.mulesource.org</url>
    <inceptionYear>2003</inceptionYear>
    <mailingLists>
        <!-- Refer to http://mule.mulesource.org/Mailing+Lists -->
    </mailingLists>
    <developers>
        <!-- Refer to http://mule.mulesource.org/Team -->
    </developers>
    <contributors>
        <!-- Refer to http://mule.mulesource.org/Team -->
    </contributors>
    <issueManagement>
        <system>jira</system>
        <url>http://dev.mulesource.org/jira/browse/MULE</url>
    </issueManagement>

    <!-- Build -->
    <scm>
        <connection>scm:svn:http://svn.codehaus.org/mule/branches/mule-1.4.x/</connection>
        <developerConnection>scm:svn:https://svn.codehaus.org/mule/branches/mule-1.4.x/</developerConnection>
        <url>http://svn.mule.codehaus.org/</url>
    </scm>

    <properties>
        <!--
            The above project.url will not be picked up in the manifest,
            instead a module artifact id is erroneously substituted.
         -->
        <productUrl>http://mule.mulesource.org</productUrl>
        <springVersion>2.5.1</springVersion>
        <xfireVersion>1.2.6</xfireVersion>
        <coberturaVersion>2.2</coberturaVersion>
    </properties>

    <!-- declare all dependencies that are used in more than one module here. -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-ejb_2.1_spec</artifactId>
                <version>1.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-j2ee-connector_1.5_spec</artifactId>
                <version>1.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-j2ee-management_1.0_spec</artifactId>
                <version>1.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-jaxrpc_1.1_spec</artifactId>
                <version>1.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-jms_1.1_spec</artifactId>
                <version>1.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-jta_1.0.1B_spec</artifactId>
                <version>1.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-qname_1.1_spec</artifactId>
                <version>1.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-saaj_1.1_spec</artifactId>
                <version>1.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-servlet_2.4_spec</artifactId>
                <version>1.0.1</version>
            </dependency>
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>1.1</version>
            </dependency>
            <dependency>
                <groupId>javax.mail</groupId>
                <artifactId>mail</artifactId>
                <version>1.4</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>3.8.2</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring</artifactId>
                <version>${springVersion}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-logging</artifactId>
                        <groupId>commons-logging</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${springVersion}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-logging</artifactId>
                        <groupId>commons-logging</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>mx4j</groupId>
                <artifactId>mx4j-jmx</artifactId>
                <version>2.1.1</version>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.14</version>
            </dependency>
            <!-- commons-codec is used by the http transport and commons-httpclient
                 in different versions.
            -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.3</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.xfire</groupId>
                <artifactId>xfire-core</artifactId>
                <version>${xfireVersion}</version>
                <exclusions>
                    <!-- we like slf4j -->
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <!-- we want the newer version below -->
                        <groupId>woodstox</groupId>
                        <artifactId>wstx-asl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xerces</groupId>
                        <artifactId>xmlParserAPIs</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.codehaus.xfire</groupId>
                <artifactId>xfire-aegis</artifactId>
                <version>${xfireVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.xfire</groupId>
                <artifactId>xfire-annotations</artifactId>
                <version>${xfireVersion}</version>
                <exclusions>
                    <exclusion>
                        <groupId>qdox</groupId>
                        <artifactId>qdox</artifactId>
                    </exclusion>
                    <!-- xfire-annotations dependends on commons-attributes,
                    which in turn pulls in an ancient ant-1.5 ?! -->
                    <exclusion>
                        <groupId>ant</groupId>
                        <artifactId>ant</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- the following dependency is required to make the xfire-annotations
            work with jsr181 JDK5 annotations -->
            <dependency>
                <groupId>org.codehaus.xfire</groupId>
                <artifactId>xfire-java5</artifactId>
                <version>${xfireVersion}</version>
            </dependency>
            <!-- the following dependency will be needed for xmlbeans testing
            <dependency>
                <groupId>org.codehaus.xfire</groupId>
                <artifactId>xfire-xmlbeans</artifactId>
                <version>${xfireVersion}</version>
            </dependency>
            -->
            <!-- the following dependency will be needed for jaxb2 model annotations
            <dependency>
                <groupId>org.codehaus.xfire</groupId>
                <artifactId>xfire-jaxb2</artifactId>
                <version>${xfireVersion}</version>
            </dependency>
            -->
            <dependency>
                <groupId>org.codehaus.xfire</groupId>
                <artifactId>xfire-ws-security</artifactId>
                <version>${xfireVersion}</version>
                <exclusions>
                    <!-- we like slf4j -->
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <!-- this should really be in test scope -->
                    <exclusion>
                        <groupId>jmock</groupId>
                        <artifactId>jmock</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>commons-httpclient</groupId>
                <artifactId>commons-httpclient</artifactId>
                <version>3.1</version>
                <exclusions>
                    <!-- we like slf4j -->
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derby</artifactId>
                <version>10.14.2.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <ciManagement>
        <system>bamboo</system>
        <url>http://bamboo.mulesource.org/bamboo</url>
        <notifiers>
            <notifier>
                <type>mail</type>
                <configuration>
                    <address>scm@mule.codehaus.org</address>
                </configuration>
            </notifier>
        </notifiers>
    </ciManagement>

    <distributionManagement>
        <downloadUrl>http://mule.mulesource.org/display/MULE/Download</downloadUrl>
        <repository>
            <id>mule-releases</id>
            <name>Mule Release Repository</name>
            <url>dav:https://dav.codehaus.org/repository/mule/</url>
        </repository>
        <snapshotRepository>
            <id>mule-snapshots</id>
            <name>Mule Snapshot Repository</name>
            <url>dav:https://dav.codehaus.org/snapshots.repository/mule/</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
        <site>
            <id>mule-site</id>
            <name>Mule Website</name>
            <url>dav:https://dav.codehaus.org/mule/docs/${version}</url>
        </site>
    </distributionManagement>

    <repositories>
        <repository>
            <id>codehaus</id>
            <name>Codehaus Maven 2.x Release Repository</name>
            <url>http://repository.codehaus.org</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>codehaus-snapshots</id>
            <name>Codehaus Maven 2.x Snapshots Repository</name>
            <url>http://snapshots.repository.codehaus.org</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
        <repository>
            <id>apache.incubating.releases</id>
            <name>Apache Incubating Release Distribution Repository</name>
            <url>http://people.apache.org/repo/m2-incubating-repository</url>
        </repository>
        <repository>
            <id>apache-snapshots</id>
            <name>Snapshot repository</name>
            <url>http://people.apache.org/maven-snapshot-repository</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
        <repository>
            <id>apache.snapshots</id>
            <name>Apache Development Snapshot Repository</name>
            <url>http://people.apache.org/repo/m2-snapshot-repository</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
        <repository>
            <id>mule-deps</id>
            <name>Mule Dependencies</name>
            <url>http://dist.codehaus.org/mule/dependencies/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <!--
                This is the same as apache-snapshots, but for plugins now.
                Technically it could've been a different repo, but they
                put all snapshots in one location at Apache.
             -->
            <id>apache-plugin-snapshots</id>
            <name>Apache Maven Plugins Snapshot Repository</name>
            <url>http://people.apache.org/maven-snapshot-repository</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </pluginRepository>
        <!--
        <pluginRepository>
            <id>Maven Snapshots</id>
            <url>http://snapshots.maven.codehaus.org/maven2</url>
        </pluginRepository>
        -->
        <!-- this is needed to download dependencies of plugins from our custom repo -->
        <pluginRepository>
            <id>mule-plugins-deps</id>
            <name>Mule Plugin Dependencies</name>
            <url>http://dist.codehaus.org/mule/dependencies/maven2</url>
<!--            <snapshots>
                <enabled>false</enabled>
            </snapshots>-->
        </pluginRepository>
        <pluginRepository>
            <!-- for the mule-assembly-verifier-plugin -->
            <id>codehaus</id>
            <name>Codehaus Maven 2.x Release Repository</name>
            <url>http://repository.codehaus.org</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <defaultGoal>install</defaultGoal>

        <extensions>
            <!-- WebDAV for remote deployment -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-webdav</artifactId>
            </extension>
        </extensions>

        <!-- Project version filters -->
        <!-- Fails if the project doesn't have this file, need to push it down?  Use settings.xml instead.
        <filters>
            <filter>project.properties</filter>
        </filters
        -->

        <!-- specify versions of the plugins used in child poms here -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.mule.tools</groupId>
                    <artifactId>mule-assembly-verifier</artifactId>
                    <version>1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>2.0-beta-6</version>
                </plugin>
                <!-- The build will fail with any other version of the g-m-p -->
                <plugin>
                    <groupId>org.codehaus.mojo.groovy</groupId>
                    <artifactId>groovy-maven-plugin</artifactId>
                    <version>1.0-beta-2</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Compile to JDK 1.4 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!--
                        we should really, really use the eclipse compiler but cannot:
                        http://jira.codehaus.org/browse/MCOMPILER-43
                        http://jira.codehaus.org/browse/PLXCOMP-59
                    -->
                    <!-- <compilerId>eclipse</compilerId> -->
                    <source>1.4</source>
                    <target>1.4</target>
                    <encoding>ISO-8859-1</encoding>
                </configuration>
                <!--
                <dependencies>
                  <dependency>
                    <groupId>org.codehaus.plexus</groupId>
                    <artifactId>plexus-compiler-eclipse</artifactId>
                    <version>1.5.1</version>
                  </dependency>
                </dependencies>
                -->
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <!--
                            Disabled for http://mule.mulesource.org/jira/browse/MULE-1153
                            and http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4408526
                         -->
                        <index>false</index>
                        <!-- List dependencies in the MANIFEST.MF -->
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <!-- Custom Entries -->
                        <manifestEntries>
                            <More-Info>For more information go to ${productUrl}</More-Info>
                            <Support>Get commercial support: ${pom.organization.url}/support</Support>
                            <Description>Mule ESB and Integration Platform</Description>
                            <License>CPAL v1.0 http://www.mulesource.com/CPAL/</License>
                            <Vendor-Url>${pom.organization.url}</Vendor-Url>
                            <Product-Url>${productUrl}</Product-Url>
                            <Dtd-Public-Id>-//${pom.organization.name} //DTD mule-configuration XML V1.0//EN</Dtd-Public-Id>
                            <Dtd-System-Id>${productUrl}/dtds</Dtd-System-Id>
                            <!-- This would work if this issue gets closed: http://jira.codehaus.org/browse/MNG-1832 -->
                            <!--Build-Date>${mvn.timestamp.yyyy-MM-dd-HH:mm:ss}</Build-Date-->
                            <!-- include repository revision from buildnumber plugin -->
                            <Build-Revision>${buildNumber}</Build-Revision>
                            <Build-Date>${timestamp}</Build-Date>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <!-- Global test exclusions -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!--
                    Fix surefire-report:report goal, which failed to
                    complete if there were test errors (no report was
                    generated).
                -->
                <version>RELEASE</version>
                <!--<version>2.3-SNAPSHOT</version>-->
                <configuration>
                    <argLine>-Xms64m -Xmx256m</argLine>
                    <excludes>
                        <exclude implementation="java.lang.String">**/Abstract*.*</exclude>
                        <!-- The org.mule.tck classes are in the test directory but are not runnable tests. -->
                        <exclude implementation="java.lang.String">org/mule/tck/**</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Delete code coverage database when 'mvn clean' is executed -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>${coberturaVersion}</version>
                <executions>
                    <execution>
                        <id>clean</id>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 
                 Needed for checkstyle to find the license header file from the classpath.
                 CAVEAT: you cannot build the site without mule-buildtools present in 
                 your local repository.

                 For plugin config see below in reporting section
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.mule</groupId>
                        <artifactId>mule-buildtools</artifactId>
                        <version>${version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- by default download all sources when generating project files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <configuration>
                    <downloadSources>true</downloadSources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-idea-plugin</artifactId>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <jdkName>1.4</jdkName>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Reports -->
    <reporting>
        <plugins>
            <!-- Module dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependencies</report>
                            <report>index</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <!-- test exclusions report -->
            <plugin>
                <groupId>org.mule.tools</groupId>
                <artifactId>mule-test-exclusions-report-plugin</artifactId>
            </plugin>

            <!-- Javadoc settings -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <!-- 
                     see 
                        http://jira.codehaus.org/browse/MJAVADOC-145 
                        http://jira.codehaus.org/browse/MJAVADOC-157
                     which are not yet fixed in a publicly available release.
                -->
                <version>2.4-MULE-597051</version>
                <configuration>
                    <minmemory>128m</minmemory>
                    <maxmemory>512m</maxmemory>
                    <charset>ISO-8859-1</charset>
                    <encoding>ISO-8859-1</encoding>
                    <source>1.4</source>
                    <!-- aggregate all when built from the top-level directory -->
                    <aggregate>true</aggregate>
                    <!-- Link to the external online JavaDoc -->
                    <links>
                        <link>http://java.sun.com/j2se/1.4.2/docs/api/</link>
                        <link>http://java.sun.com/j2ee/sdk_1.3/techdocs/api/</link>
                        <link>http://jakarta.apache.org/commons/beanutils/commons-beanutils-1.7.0/docs/api/</link>
                        <link>http://jakarta.apache.org/commons/collections/api-3.2/</link>
                        <link>http://jakarta.apache.org/httpcomponents/httpclient-3.x/apidocs/</link>
                        <link>http://jakarta.apache.org/commons/io/api-1.2/</link>
                        <link>http://jakarta.apache.org/commons/lang/api-2.1/</link>
                        <link>http://jakarta.apache.org/commons/pool/apidocs/</link>
                        <link>http://logging.apache.org/log4j/1.2/apidocs/</link>
                        <link>http://www.slf4j.org/api/</link>
                        <link>http://backport-jsr166.sourceforge.net/doc/api/</link>
                        <link>http://junit.sourceforge.net/javadoc/</link>
                    </links>
                    <groups>
                        <group>
                            <title>Mule Core</title>
                            <packages>org.mule*</packages>
                        </group>
                        <group>
                            <title>Modules (not part of the Mule core)</title>
                            <packages>org.mule.extras.*:org.mule.components.*</packages>
                        </group>
                        <group>
                            <title>Transports (a.k.a. Providers)</title>
                            <packages>org.mule.providers.*</packages>
                        </group>
                        <group>
                            <title>Testing Framework</title>
                            <packages>org.mule.tck*</packages>
                        </group>
                        <group>
                            <title>Tools</title>
                            <packages>org.mule.tools.*</packages>
                        </group>
                        <group>
                            <title>Examples</title>
                            <packages>org.mule.samples.*:org.mule.examples.*</packages>
                        </group>
                    </groups>
                </configuration>
            </plugin>

            <!-- Source code cross-reference -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <configuration>
                    <aggregate>true</aggregate>
                </configuration>
            </plugin>

            <!--
                When there is JXR cross-refernce output available,
                it will be linked to in case of test failures
             -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <configuration>
                    <!-- Display failed tests only -->
                    <showSuccess>false</showSuccess>
                </configuration>
            </plugin>

            <!-- Checkstyle reports -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <configLocation>codecheck/checkstyle.xml</configLocation>
                    <headerLocation>codecheck/LicenseHeader.txt</headerLocation>
                    <!-- do not link to JXR output as that is aggregated and the checkstyle
                         plugin does not recognize that.
                    -->
                    <linkXRef>false</linkXRef>
                </configuration>
            </plugin>

            <!-- Code Coverage by Cobertura -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>${coberturaVersion}</version>
            </plugin>
        </plugins>
    </reporting>

    <modules>
        <module>buildtools</module>
        <module>core</module>
        <module>modules</module>
        <module>transports</module>
        <module>tests</module>
        <module>examples</module>
        <!-- see:
            http://mule.mulesource.org/jira/browse/MULETOOLS-2
            http://mule.mulesource.org/jira/browse/MULETOOLS-21
            http://mule.mulesource.org/jira/browse/MULETOOLS-22
        -->
        <module>tools</module>
    </modules>

    <!--
    The default profiles for the build are configured in the file settings.xml.
    You can override the default profiles from the command line as follows:
        "mvn -Ddistributions=true -Dtests=false -Doracle=true"

    (For other ways to work with profiles, see
        http://maven.apache.org/guides/introduction/introduction-to-profiles.html)
    -->
    <profiles>
        <profile>
            <id>java14</id>
            <activation>
                <jdk>1.4</jdk>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <profile>
            <id>java5</id>
            <activation>
                <jdk>1.5</jdk>
            </activation>
        </profile>

        <profile>
            <!-- Integration tests -->
            <id>tests</id>
            <activation>
                <property>
                    <name>tests</name>
                    <value>true</value>
                </property>
            </activation>
        </profile>

        <profile>
            <id>distributions</id>
            <activation>
                <property>
                    <name>distributions</name>
                    <value>true</value>
                </property>
            </activation>
            <modules>
                <module>distributions</module>
            </modules>
        </profile>

        <profile>
            <id>ci-server</id>
            <distributionManagement>
                <site>
                    <url>file:///home/luntbuild/publish/mule/docs/${version}</url>
                </site>
            </distributionManagement>
        </profile>

        <profile>
            <id>bamboo</id>
            <distributionManagement>
                <site>
                    <url>file:///var/www/html/docs/site/${version}</url>
                </site>
            </distributionManagement>
        </profile>

        <profile>
            <id>buildnumber-plugin</id>
            <activation>
                <property>
                    <!--
                         This profile is activated if NO system property
                         'skipBuildnumber' is found. Disable this profile
                         by specifying -DskipBuildnumber=true on the commandline
                    -->
                    <name>!skipBuildnumber</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- add repository revision to manifests -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>buildnumber-maven-plugin</artifactId>
                        <version>1.0-beta-2-MULE-5675</version>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>create</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- never touch svn -->
                            <doCheck>false</doCheck>
                            <doUpdate>false</doUpdate>
                            <timestampFormat>{0,date,yyyy-MMM-dd HH:mm:ss}</timestampFormat>
                        </configuration>
                     </plugin>
                </plugins>
            </build>
        </profile>

        <!--
            The maven-enforcer-plugin has an option to skip all checks (-Denforcer.skip=true)
            but this runs the enforcer plugin anyway with each and every module, sometimes 
            even multiple times.

            So we put it in a profile here to completely disable the enforcer plugin
            e.g. on the CI server etc.
        -->
        <profile>
            <id>enforcer-plugin</id>
            <activation>
                <property>
                    <!--
                        This profile is activated if NO system property
                        'skipEnforcer' is found. Disable this profile
                        by specifying -DskipEnforcer=true on the commandline
                        -->
                    <name>!skipEnforcer</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Enforce minimum maven version.
                         This must be done through the maven-enforcer-plugin as per 
                         http://jira.codehaus.org/browse/MNG-2423 the prerequisites are not inherited.
                         -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <!-- MULE-2070: 1.0-alpha-3 is broke so enforce previous version  -->
                        <version>1.0-alpha-2</version>
                        <executions>
                            <execution>
                                <id>enforce-maven-version</id>
                                <goals>
                                    <goal>enforce-once</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireMavenVersion>
                                            <!-- minimum version is 2.0.8, higher versions allowed -->
                                            <version>[2.0.8,)</version>
                                        </requireMavenVersion>
                                        <requireJavaVersion>
                                            <!-- minimum version is 1.4.2, Java 5 and higher not allowed -->
                                            <version>[1.4.2,1.5.0)</version>
                                        </requireJavaVersion>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
