<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.codehaus.mule</groupId>
        <artifactId>mule-project</artifactId>
        <version>2.0-SNAPSHOT</version>
    </parent>
    <artifactId>mule-providers</artifactId>
    <packaging>pom</packaging>
    <name>Mule Providers</name>

    <profiles>
        <profile>
            <id>java5</id>
            <modules>
                <module>gs</module>
            </modules>
        </profile>
    </profiles>

    <modules>
        <module>axis</module>
        <module>dq</module>
        <module>ejb</module>
        <module>email</module>
        <module>file</module>
        <module>ftp</module>
        <module>glue</module>
        <module>http</module>
        <module>jbi</module>
        <module>jdbc</module>
        <module>jms</module>
        <module>multicast</module>
        <module>oaq</module>
        <module>quartz</module>
        <module>rmi</module>
        <module>soap</module>
        <module>space</module>
        <module>ssl</module>
        <module>stream</module>
        <module>tcp</module>
        <module>udp</module>
        <module>vm</module>
        <module>xfire</module>
        <module>xmpp</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>org.codehaus.mule</groupId>
            <artifactId>mule-core</artifactId>
            <version>${version}</version>
        </dependency>
        <!--
            TODO this is a hack. Duplicate declaration (original is in the top pom.xml)
            makes JMS provider happy to compile when run from the project root folder,
            otherwise it cannot find classes from commons-collections.

            At the same time, running either from the providers or jms folder works fine
            without this hack.

            It seems m2 dependency visibility hierarchy is limited to 1 level deep.
        -->
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.2</version>
        </dependency>
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>1.3</version>
            <!-- TODO get rid of duplication in the top-level providers pom.xml -->
            <exclusions>
                <exclusion>
                    <groupId>xerces</groupId>
                    <artifactId>xercesImpl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
</project>
